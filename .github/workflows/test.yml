name: Test

on:
  push:
    branches:
      - main
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - 'Cargo.lock'

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: 'true'
  SCCACHE_GHA_VERSION: '1-amd64'

jobs:
  check-postgres:
    runs-on: ubuntu-24.04
    env:
      DATABASE_URL: postgres://nimbus:secret@localhost:5432/cache
      DATABASE_DRIVER: postgres
    services:
      postgres:
        image: ghcr.io/bitcompat/postgresql:17
        env:
          POSTGRESQL_USERNAME: nimbus
          POSTGRESQL_PASSWORD: secret
          POSTGRESQL_DATABASE: cache
          ALLOW_EMPTY_PASSWORD: 'yes'
        options: >-
          --health-cmd="pg_isready -U nimbus" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v5
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Install Rust toolchain
        run: |-
          command -v rustup || ( curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y )
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
      - name: Update Rust toolchain
        run: rustup update
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y postgresql-client protobuf-compiler
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres,mysql,sqlite
      - name: Prepare database
        run: |
          sqlx database create
          sqlx migrate run --source migrations/postgres
      - name: Run tests
        run: cargo test --all-targets --all-features

  check-mysql:
    runs-on: ubuntu-24.04
    env:
      DATABASE_URL: mysql://nimbus:secret@localhost:3306/cache
      DATABASE_DRIVER: mysql
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cache
          MYSQL_USER: nimbus
          MYSQL_PASSWORD: secret
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot" --health-interval=10s --health-timeout=5s --health-retries=5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v5
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Install Rust toolchain
        run: |-
          command -v rustup || ( curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y )
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
      - name: Update Rust toolchain
        run: rustup update
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y default-mysql-client protobuf-compiler
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres,mysql,sqlite
      - name: Prepare database
        run: |
          sqlx database create
          sqlx migrate run --source migrations/mysql
      - name: Run tests
        run: cargo test --all-targets --all-features

  check-sqlite:
    runs-on: ubuntu-24.04
    env:
      DATABASE_URL: sqlite:///tmp/gha-cache.db
      DATABASE_DRIVER: sqlite
    steps:
      - uses: actions/checkout@v5
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Install Rust toolchain
        run: |-
          command -v rustup || ( curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y )
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
      - name: Update Rust toolchain
        run: rustup update
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres,mysql,sqlite
      - name: Prepare database
        run: |
          mkdir -p /tmp
          rm -f /tmp/gha-cache.db
          sqlx database create
          sqlx migrate run --source migrations/sqlite
      - name: Run tests
        run: cargo test --all-targets --all-features
