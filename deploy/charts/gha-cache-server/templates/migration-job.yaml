{{- if .Values.migrationJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gha-cache-server.fullname" . }}-migrate
  labels:
    {{- include "gha-cache-server.labels" . | nindent 4 }}
  {{- with .Values.migrationJob.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  template:
    metadata:
      labels:
        {{- include "gha-cache-server.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "gha-cache-server.serviceAccountName" . }}
      restartPolicy: {{ .Values.migrationJob.restartPolicy }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.migrationJob.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.migrationJob.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- $configMapName := "" -}}
          {{- if .Values.env.existingConfigMap -}}
          {{- $configMapName = .Values.env.existingConfigMap -}}
          {{- else if gt (len .Values.env.config) 0 -}}
          {{- $configMapName = include "gha-cache-server.fullname" . -}}
          {{- end -}}
          {{- $secretName := "" -}}
          {{- if .Values.env.existingSecret -}}
          {{- $secretName = .Values.env.existingSecret -}}
          {{- else if gt (len .Values.env.secret) 0 -}}
          {{- $secretName = include "gha-cache-server.fullname" . -}}
          {{- end -}}
          {{- $envFrom := list -}}
          {{- if $configMapName -}}
          {{- $envFrom = append $envFrom (dict "configMapRef" (dict "name" $configMapName)) -}}
          {{- end -}}
          {{- if $secretName -}}
          {{- $envFrom = append $envFrom (dict "secretRef" (dict "name" $secretName)) -}}
          {{- end -}}
          {{- range .Values.env.extraEnvFrom -}}
          {{- $envFrom = append $envFrom . -}}
          {{- end -}}
          {{- range .Values.migrationJob.extraEnvFrom -}}
          {{- $envFrom = append $envFrom . -}}
          {{- end -}}
          {{- if $envFrom }}
          envFrom:
            {{- toYaml $envFrom | nindent 12 }}
          {{- end }}
          {{- $env := list -}}
          {{- with .Values.env.extra }}
          {{- $env = concat $env . -}}
          {{- end }}
          {{- with .Values.migrationJob.extraEnv }}
          {{- $env = concat $env . -}}
          {{- end }}
          {{- if $env }}
          env:
            {{- toYaml $env | nindent 12 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.migrationJob.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  {{- if .Values.migrationJob.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.migrationJob.ttlSecondsAfterFinished }}
  {{- end }}
{{- end }}
